apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  namespace: starburst-playground
  labels:
    namespace: starburst-playground
    app: zookeeper
spec:
  ports:
    - port: 9092
  selector:
    app: zookeeper
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: starburst-playground
  name: zookeeper
  labels:
    namespace: starburst-playground
    app: zookeeper
spec:
  replicas: 1
  serviceName: zookeeper
  selector:
    matchLabels:
      namespace: starburst-playground
      app: zookeeper
  template:
    metadata:
      namespace: starburst-playground
      labels:
        namespace: starburst-playground
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:6.2.1
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
            - name: ZOOKEEPER_DATA_DIR
              value: "/data/zookeeper"
          volumeMounts:
            - mountPath: /data/zookeeper
              name: zookeeper-data
  volumeClaimTemplates:
    - metadata:
        name: zookeeper-data
        namespace: starburst-playground
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  namespace: starburst-playground
  labels:
    namespace: starburst-playground
    app: kafka
spec:
  ports:
    - port: 9092
  selector:
    namespace: starburst-playground
    app: kafka
  clusterIP: None
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  namespace: starburst-playground
  labels:
    app: kafka
spec:
  serviceName: kafka
  selector:
    matchLabels:
      namespace: starburst-playground
      app: kafka
  replicas: 1
  template:
    metadata:
      labels:
        namespace: starburst-playground
        app: kafka
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:6.2.1
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "zookeeper"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "false"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_LOG_DIRS
              value: "/data/kafka"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://:9092"
          volumeMounts:
            - mountPath: /data/kafka
              name: kafka-data
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
        namespace: starburst-playground
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: schema-registry
  namespace: starburst-playground
  labels:
    app: schema-registry
spec:
  ports:
    - name: "http"
      protocol: TCP
      port: 8081
      targetPort: "http"
  selector:
    app: schema-registry
    namespace: starburst-playground
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: schema-registry
  namespace: starburst-playground
  labels:
    app: schema-registry
spec:
  selector:
    matchLabels:
      namespace: starburst-playground
      app: schema-registry
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        namespace: starburst-playground
        app: schema-registry
    spec:
      containers:
        - name: schema-registry
          image: confluentinc/cp-schema-registry:6.2.1
          ports:
            - name: "http"
              protocol: TCP
              containerPort: 8081
          env:
            - name: SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS
              value: "PLAINTEXT://kafka:9092"
            - name: SCHEMA_REGISTRY_HEAP_OPTS
              value: "-Xmx512M"
            - name: SCHEMA_REGISTRY_HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SCHEMA_REGISTRY_LISTENERS
              value: "http://0.0.0.0:8081"
          readinessProbe:
            failureThreshold: 10
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            httpGet:
              port: "http"
              path: "/"
          livenessProbe:
            failureThreshold: 10
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 2
            httpGet:
              port: "http"
              path: "/"
